var active_rich = null;window.onerror = no_error;function do_action(action,value){var mode;var sel;var r;var is_control;var found;var button_object;	eval('mode = '+active_rich.name+'_rich_mode;');	active_rich.focus(); re_hide_lists(); button_object = get_button_object(action);	if(!active_button(button_object)){ return;	} var container_type; try{ sel = active_rich.getSelection(); r = sel.getRangeAt(0); container_type = r.startContainer.nodeType;	}catch(error){	}	if (container_type == 1) is_control = true; else is_control = false;	found = true;	switch(action){ case 'Cut': case 'Copy': case 'Paste': case 'Undo': case 'Redo': case 'Unlink': break; case 'Bold': case 'Italic': case 'Underline': case 'Strikethrough': case 'SuperScript': case 'SubScript': case 'JustifyFull': case 'InsertOrderedList': case 'InsertUnorderedList': case 'Outdent': case 'Indent': case 'InsertHorizontalRule': case 'RemoveFormat': if(is_control) found = false; break; case 'JustifyLeft': case 'JustifyCenter': case 'JustifyRight': break; case 'FormatBlock': case 'FontName': case 'FontSize': if(is_control || !value) found = false; break; case 'ClassName': set_class(value); found = false; break; case 'ForeColor': case 'HiliteColor': if(is_control){ found = false; break; } if(!value) { pick_color(null, action, active_rich.document.queryCommandValue(action)); } if (value == '') value = 'rgb(0, 0, 1)'; break; case 'InsertRow': found = false; if(is_control) break; if (value != null) { insert_row(value); switch_borders(false); } else { insert_to('insert_row'); } break; case 'DeleteRow': found = false; if(is_control) break; delete_row(); break; case 'InsertColumn': found = false; if(is_control) break; if (value != null) { insert_column(value); switch_borders(false); } else { insert_to('insert_column'); } break; case 'DeleteColumn': found = false; if(is_control) break; delete_column(); break; case 'PasteWord': show_dialog('PasteWord'); found = false; break; case 'SwitchBorders': switch_borders(true); found = false; break; case 'InsertChar': found = false; if (is_control) { var element = r.startContainer.childNodes[r.startOffset]; if (!element || element.tagName != 'BR') break; } insert_char(); break; case 'InsertCell': found = false; if(is_control) break; insert_cell(); switch_borders(false); break; case 'DeleteCell': found = false; if(is_control) break; delete_cell(); break; case 'MergeCells': found = false; if(is_control) break; merge_cells(); break; case 'MergeCellsDown': found = false; if(is_control) break; merge_cells_down(); break; case 'SplitCell': found = false; if(is_control) break; split_cell(); switch_borders(false); break; case 'SplitCellDown': found = false; if(is_control) break; merge_cells_down(true); break; case 'FullScreen': full_screen(get_editor_name(button_object)); found = false; break; case 'InsertSnippet': if(value!=null) insert_snippet(value); found = false; break; default: found = false; break;	}	if (action != 'HiliteColor') active_rich.document.execCommand('useCSS', false, true);	if(found) active_rich.document.execCommand(action, false, value);	if (action == 'ForeColor' || action == 'HiliteColor') { var i; var spans = active_rich.document.getElementsByTagName('SPAN'); for (i=0;i<spans.length;i++) { if (spans[i].style.color || spans[i].style.backgroundColor) { span2font(spans[i]); } } var fonts = active_rich.document.getElementsByTagName('FONT'); for (i=0;i<fonts.length;i++) { var el = fonts[i]; fix_font_style(fonts[i]); }	}	change_toolbar_state(); }function active_button(element){	if(element && element.className != 're_img_off') return true;	return false;}function get_button_object(what){var obj; eval('obj = document.getElementById("'+what+'_'+active_rich.name+'")');	return obj;}function full_screen(editor_name){var full_screen_mode;var table_obj = document.getElementById(editor_name+'_table_id');var div_obj = document.getElementById(editor_name+'_div_id');var action;	eval('full_screen_mode = '+active_rich.name+'_rich_full_screen_mode;');	if(!full_screen_mode && rich_fs_mode_on){ return;	}	full_screen_mode = full_screen_mode==true?false:true;	set_state('FullScreen', full_screen_mode);	eval(active_rich.name+'_rich_full_screen_mode = full_screen_mode;');	if(full_screen_mode){ div_obj.style.position = "Absolute"; div_obj.style.zIndex = "999"; div_obj.style.top = 0; div_obj.style.left = 0; var win_size = re_get_window_size(); var width = win_size[0]; var height = win_size[1]; div_obj.style.width = String(width)+'px'; div_obj.style.height = String(height)+'px'; table_obj.style.position = "Absolute"; table_obj.style.zIndex = "999"; table_obj.style.top = 0; table_obj.style.left = 0; table_obj.style.width = String(width)+'px'; table_obj.style.height = String(height)+'px'; action = 'none';	}else{ table_obj.style.cssText = ""; div_obj.style.cssText = ""; action = '';	} var editor = document.getElementsByTagName('IFRAME');	var i;	for(i=0;i<editor.length;i++){ if(editor[i].className == 're_editor' && editor[i].name != editor_name){ eval('var mode = '+editor[i].name+'_rich_mode;'); if (mode) { editor[i].style.display = action; if (action == '') { try{ eval(editor[i].name + '_id.document.designMode = "On";'); }catch(error){ } } } }	} try{ eval(editor_name + '_id.document.designMode = "On";');	}catch(error){	}	rich_fs_mode_on = full_screen_mode;	active_rich.focus();}function mouse_down(down, element){var mode;var name;var obj;	if(element && element.tagName=='IMG'){ name = get_editor_name(element); eval('mode = '+name+'_rich_mode;'); if(!active_button(element)){ eval('obj = '+name+'_id;'); if(obj) obj.focus(); return; } if(down){ element.className = 're_mouse_down'; }else{ element.className = 're_mouse_up'; }	}}function re_get_window_size(){var width = Math.min(document.documentElement.offsetWidth, window.innerWidth);	if (window.scrollMaxY && width != document.documentElement.offsetWidth) width -= 16;var height = window.innerHeight;	if (window.scrollMaxX) height -= 16;	return Array(width, height);}function mouse_over(over, element){var element;var name;var mode;var obj;var id_name;var acrion_name;var old_active_rich;var button_name;var changing_button;var mode_name;	if(element && element.tagName=='IMG'){ name = get_editor_name(element); eval('mode = '+name+'_rich_mode;'); eval('obj = '+name+'_id;'); if(!obj) return; if(!active_button(element)) return; if(over){ element.className = 're_mouse_over'; }else{ id_name = String(element.id); action_name = id_name.substring(0,id_name.length-name.length-1); if(action_name == 'SwitchBorders' || action_name == 'FullScreen'){ if(action_name == 'SwitchBorders') mode_name = 'border'; else mode_name = 'full_screen'; eval('border_mode = '+obj.name+'_rich_'+mode_name+'_mode;'); old_active_rich = active_rich; active_rich = obj; set_state(action_name, border_mode); active_rich = old_active_rich; }else{ button_name = (id_name.split('_'))[0]; if(button_name == 'Bold' || button_name == 'Italic' || button_name == 'Underline'|| button_name == 'Strikethrough' || button_name == 'SuperScript' || button_name == 'SubScript' || button_name == 'JustifyLeft' || button_name == 'JustifyCenter' || button_name == 'JustifyRight' || button_name == 'JustifyFull' || button_name == 'InsertOrderedList' || button_name == 'InsertUnorderedList'){ changing_button = true; }else{ changing_button = false; } var rich_doc = re_rich_doc(); try{ if(!changing_button || !rich_doc.queryCommandState(action_name)){ element.className = 're_mouse_out'; }else{ element.className = 're_mouse_down'; } } catch (e) { element.className = 're_mouse_out'; } } }	}}function get_editor_name(element){var pos;var button_id_parts;	if(!element) return '';	button_id_parts = element.id.match(/([^_]+)_(.+)$/);	if(button_id_parts) return button_id_parts[2];	return '';}function show_active_buttons(){	try{ var sel = active_rich.getSelection(); var range = sel.getRangeAt(0); var is_control = range.startContainer.nodeType==1?true:false; var container = range.startContainer; var parent = container.parentNode; var container_type = container.nodeType;	}catch(error){ return;	}var i;var text_button = Array('Bold', 'Italic', 'Underline', 'Strikethrough', 'SuperScript', 'SubScript', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyFull', 'InsertOrderedList', 'InsertUnorderedList', 'Indent', 'Outdent', 'RemoveFormat', 'ForeColor', 'HiliteColor', 'PasteWord', 'InsertChar');var button_length = text_button.length;var text_select = Array('FormatBlock', 'FontName', 'FontSize');var select_length = text_select.length;var td;var tr;var table;var table_button = Array('EditTable', 'InsertRow', 'DeleteRow', 'InsertColumn', 'DeleteColumn', 'InsertCell', 'DeleteCell', 'EditTable', 'EditCell');var table_length = table_button.length;var form_button = Array('CreateText', 'CreateTextArea', 'CreateButton', 'CreateSelect', 'CreateHidden', 'CreateCheckBox', 'CreateRadio');var form_length = form_button.length;var visible;var element;var create_table = false;var create_image = false;var create_textfield = false;var create_textarea = false;var create_button = false;var create_select = false;var create_hidden = false;var create_checkbox = false;var create_radio = false;	if(!active_rich) return; eval('var prev_is_control = '+active_rich.name+'_prev_is_control;'); eval(active_rich.name+'_prev_is_control = '+is_control+';');	if (is_control) element = container.childNodes[range.startOffset];	if (element && element.tagName == "BR") var is_control = false;	if(!is_control){ show_button('CreateLink', range!=''?true:false); td = get_previous_object(parent,'TD'); tr = get_previous_object(td,'TR'); table = get_previous_object(td,'TABLE'); for(i=0;i<table_length;i++){ show_button(table_button[i], td?true:false); } visible = tr && td.cellIndex<tr.cells.length-1; show_button('MergeCells', visible); visible = tr && td.colSpan > 1; show_button('SplitCell', visible); show_button('MergeCellsDown',table&&tr.rowIndex+td.rowSpan<table.rows.length); show_button('SplitCellDown', td && td.rowSpan > 1); if(prev_is_control != is_control){ show_button('CreateTable', true); show_button('CreateImage', true); show_button('InsertHorizontalRule', true); show_button('CreateForm', true); show_button('InsertSnippet', true); for(i=0;i<form_length;i++){ show_button(form_button[i], true); } }	}else{ for(i=0;i<table_length;i++){ show_button(table_button[i], false); } show_button('MergeCells', false); show_button('SplitCell', false); show_button('MergeCellsDown', false); show_button('SplitCellDown', false); if(element){ switch(element.tagName){ case 'TABLE': create_table = true; break; case 'IMG': create_image = true; break; case 'INPUT': switch(element.type.toUpperCase()){ case 'HIDDEN': create_hidden = true; break; case 'TEXT': case 'PASSWORD': create_textfield = true; break; case 'BUTTON': case 'RESET': case 'SUBMIT': create_button = true; break; case 'CHECKBOX': create_checkbox = true; break; case 'RADIO': create_radio = true; break; default: break; } break; case 'TEXTAREA': create_textarea = true; break; case 'SELECT': create_select = true; break; default: break; } show_button('CreateTable', create_table); show_button('CreateImage', create_image); show_button('CreateLink', true); show_button('InsertHorizontalRule', false); show_button('InsertSnippet', false); show_button('CreateForm', false); show_button('CreateHidden', create_hidden); show_button('CreateText', create_textfield); show_button('CreateTextArea', create_textarea); show_button('CreateButton', create_button); show_button('CreateSelect', create_select); show_button('CreateCheckBox', create_checkbox); show_button('CreateRadio', create_radio); }	} if(prev_is_control != is_control){ for(i=0;i<button_length;i++){ show_button(text_button[i], !is_control); } for(i=0;i<select_length;i++){ show_select(text_select[i], !is_control); }	}	var rich_doc = re_rich_doc(); visible = rich_doc.queryCommandEnabled('Undo');	show_button('Undo', visible);	visible = rich_doc.queryCommandEnabled('Redo');	show_button('Redo', visible);}function change_mode(){var mode;var i;var text;var button_id_parts;var button_name;var text_area;var rich_obj;var border_mode;var full_screen_mode;	eval('mode = '+active_rich.name+'_rich_mode;');	eval('border_mode = '+active_rich.name+'_rich_border_mode;'); eval('text_area = document.getElementById("'+active_rich.name+'_area_id");'); eval('rich_obj = document.getElementById("'+active_rich.name+'_id");'); eval('var dir = '+active_rich.name+'_rich_dir;');	eval('full_screen_mode = '+active_rich.name+'_rich_full_screen_mode;');	text = get_rich_content(active_rich, true);	if(mode){ rich_obj.style.display = 'none'; text_area.style.display = ''; text_area.focus(); for(i=0;i<document.images.length;i++){ button_id_parts = document.images[i].id.match(/([^_]+)_(.+)$/); if(button_id_parts){ button_name = button_id_parts[1]; editor_name = button_id_parts[2]; if(editor_name == active_rich.name){ if(button_name != 'Help' && button_name != 'Preview' && button_name != 'Save'){ show_button(button_name, false); } } } } show_select('FormatBlock', false); show_select('FontName', false); show_select('FontSize', false); show_select('ClassName', false); eval(active_rich.name+'_rich_mode = false;');	}else{ rich_obj.style.display = ''; text_area.style.display = 'none'; rich_obj.contentWindow.document.designMode = "On"; rich_obj.contentWindow.document.dir = dir; for(i=0;i<document.images.length;i++){ button_id_parts = document.images[i].id.match(/([^_]+)_(.+)$/); if(button_id_parts){ button_name = button_id_parts[1]; editor_name = button_id_parts[2]; if(editor_name == active_rich.name){ show_button(button_name, true); } } } show_select('FormatBlock', true); show_select('FontName', true); show_select('FontSize', true); show_select('ClassName', true); set_state('SwitchBorders', border_mode); eval(active_rich.name+'_rich_mode = true;'); active_rich.focus();	}	set_rich_content(active_rich, text); show_button('FullScreen', full_screen_mode || !rich_fs_mode_on);	set_state('FullScreen', full_screen_mode);}function del_base_url(text, urls_only){	var re_text = rich_base_url;	var new_text = "";	if (urls_only) { re_text = '((src|href|background)="?)' + re_text; new_text = "$1";	}var re = new RegExp(re_text, 'gi');	RegExp.multiline = true;	return text.replace(re, new_text);}function show_button(what, show){var element; eval('element = document.getElementById("'+what+'_'+active_rich.name+'")');	if(!element) return; if(show){ element.className = '';	}else{ element.className = 're_mouse_over'; element.className = 're_img_off';	}}function show_select(what, show){var element;	eval('element = document.getElementById("'+what+'_'+active_rich.name+'")');	if(!element) return; element.disabled=!show;}function save_in_textarea_all(){var i;var mode;var name;var text;var text_area;var i;var editor = document.getElementsByTagName('IFRAME');	for(i=0;i<editor.length;i++){ if(editor[i].className == 're_editor'){ eval('mode = '+editor[i].name+'_rich_mode;'); if(!mode) continue; name = editor[i].name; eval("text=get_rich_content("+name+"_id)"); eval('text_area = document.getElementById("'+name+'_area_id");'); text_area.value = text; }	}}function set_stylesheet_rules(){var rule_values = new Array();var rule_found = false;var sheets;var sheets_num;var i,j,k;var rules;var rules_num;var rule_value;var rule_found;var rules_select;var option;var old_rule_value;	sheets = active_rich.document.styleSheets;	sheets_num = sheets.length; eval('rules_select = document.getElementById("ClassName_'+active_rich.name+'")'); if(sheets_num > 0){ for(i=0;i<sheets_num;i++){ if(!sheets[i]) continue; try { rules = sheets[i].cssRules; } catch(error) { continue; } if(rules == null) continue; rules_num = rules.length; for(j=0;j<rules_num;j++){ rule_value = rules[j].selectorText; rule_value = (rule_value.split(' '))[0]; if(rule_value.indexOf(".") >= 0){ if(rule_value.indexOf(":") >= 0){ rule_value = rule_value.substring(rule_value.indexOf(".")+1,rule_value.indexOf(":")); }else{ if(rule_value.indexOf(".") == 0){ rule_value = rule_value.substring(1,rule_value.length); }else{ if(rule_value.indexOf(".") > 0){ rule_value = rule_value.substring(rule_value.indexOf(".")+1,rule_value.length); } } } for(k=0;k<rule_values.length;k++){ if(rule_value == rule_values[k]){ rule_found = true; break; } } if(rule_found != true){ rule_values[rule_values.length] = rule_value; } rule_found = false; } } } if(rules_select){ old_rule_value = rules_select[rules_select.selectedIndex].value; while(rules_select.options[1] != null){ rules_select.options[1].parentNode.removeChild(rules_select.options[1]); } for(i=0;i<rule_values.length;i++){ if(rule_values[i] != ''){ option = document.createElement("option"); option.value = rule_values[i]; option.text = rule_values[i]; rules_select.appendChild(option); } } rules_select.value = old_rule_value; }	} else { while(rules_select.options[1] != null){ rules_select.options[1].parentNode.removeChild(rules_select.options[1]); }	}}function set_class(rule_value){var sel = active_rich.getSelection();var range = sel.getRangeAt(0);var is_set;var object;var parentTagName;var container = range.startContainer;var parent = container.parentNode;var container_type = container.nodeType;var text;	if(container_type == 1){ object = container.childNodes[range.startOffset];	}else{ if(parent){ parentTagName = parent.tagName.toUpperCase(); text = String(range); if(text == ""){ object = parent; }else{ if(parentTagName=="SPAN" || parentTagName=="A"){ object = parent; }else{ if(rule_value != ""){ try{ var span = document.createElement("span"); span.className = rule_value; span.innerHTML = text; paste_node(span); }catch(error){ } } is_set = true } } if(0 && rule_value == "" && parentTagName == "SPAN"){ object.removeNode(false); is_set = true; } }	}	if(object != null && is_set != true && object.tagName != 'BODY'){ object.className = rule_value;	}}function get_class(){	try{ var sel = active_rich.getSelection(); var range = sel.getRangeAt(0); var container = range.startContainer; var container_type = range.startContainer.nodeType; var parent = container.parentNode;	}catch(error){ return "";	}var object = null;	if (container_type == 1) { object = container.childNodes[range.startOffset];	} else { object = parent;	}	if (object != null) { if (object.className == "re_editor") return ""; while (!object.className) { object = object.parentNode; if (object == null) return ""; } return object.className;	}	return "";}function paste_node(node, range_on_node) {var sel = active_rich.getSelection();var range = sel.getRangeAt(0);var container = range.startContainer;var container_type = container.nodeType;var parent = container.parentNode;	range.deleteContents(); var start_pos = range.startOffset;var end_pos = range.endOffset;	if (container_type == 3) { sel.removeAllRanges(); range=document.createRange(); var text_node = document.createTextNode(container.nodeValue); var prev_text = text_node.nodeValue.substr(0, start_pos); var post_text = text_node.nodeValue.substr(end_pos); var prev_node = document.createTextNode(prev_text); var post_node = document.createTextNode(post_text); parent.insertBefore(post_node, container); parent.insertBefore(node, post_node); parent.insertBefore(prev_node, node); parent.removeChild(container); if (range_on_node) var r_node = node; else var r_node = post_node; range.setStart(r_node, 0); range.setEnd(r_node, 0); sel.addRange(range);	} else { container.insertBefore(node, container.childNodes[start_pos]);	}}function set_borders(border_mode){var tables = active_rich.document.getElementsByTagName("TABLE");var forms = active_rich.document.getElementsByTagName("FORM");var anchors = active_rich.document.getElementsByTagName("A");var inputs = active_rich.document.getElementsByTagName("INPUT");var page_mode;var i,j,k;var width;var height;var rows;var cells;	eval('page_mode = active_rich.window.'+active_rich.name+'_rich_page_mode;');	for(i=0;i<tables.length;i++){ if(border_mode){ tables[i].style.border = '1px dashed #CCCCCC'; }else{ width = tables[i].style.width; height = tables[i].style.height; new_css = re_remove_border_style(tables[i].style.cssText); if (new_css != '') tables[i].style.cssText = new_css; else tables[i].removeAttribute("style"); if(width) tables[i].style.width = width; if(height) tables[i].style.height = height; } rows = tables[i].rows; for(j=0;j<rows.length;j++){ cells = rows[j].cells; for(k=0;k<cells.length;k++){ if(border_mode){ cells[k].style.border = '1px dashed #CCCCCC'; }else{ new_css = re_remove_border_style(cells[k].style.cssText); if (new_css != '') cells[k].style.cssText = new_css; else cells[k].removeAttribute("style"); } } }	} for(i=0;i<forms.length;i++){ if(border_mode){ forms[i].style.border = '1px dotted #FF0000'; }else{ new_css = re_remove_border_style(forms[i].style.cssText); if (new_css != '') forms[i].style.cssText = new_css; else forms[i].removeAttribute("style"); }	} for(i=0;i<anchors.length;i++){ if(border_mode){ if (anchors[i].href == "") { anchors[i].style.borderRight = '20px solid transparent'; anchors[i].style.width = '20px'; anchors[i].style.height = '20px'; anchors[i].style.backgroundRepeat = 'no-repeat'; anchors[i].style.backgroundImage = 'url('+rich_path+'images/anchor.gif)'; } }else{ anchors[i].removeAttribute("style"); }	} for(i=0;i<inputs.length;i++){ var type = String(inputs[i].type).toLowerCase(); var tag_name2 = inputs[i].getAttribute('type2'); if (tag_name2 && String(tag_name2).toLowerCase() == 'hidden') type = 'hidden'; if (type != "hidden" && type != "hidden_field") continue; if(border_mode){ inputs[i].type = "hidden_field"; inputs[i].setAttribute('type2', 'hidden'); inputs[i].style.border = '0px'; inputs[i].style.borderRight = '20px solid transparent'; inputs[i].style.width = '20px'; inputs[i].style.height = '20px'; inputs[i].style.backgroundRepeat = 'no-repeat'; inputs[i].style.backgroundImage = 'url('+rich_path+'images/hidden.gif)'; }else{ inputs[i].type = "hidden"; inputs[i].removeAttribute("style"); inputs[i].removeAttribute("type2"); }	}	active_rich.document.body.innerHTML = active_rich.document.body.innerHTML;}function re_remove_border_style(text) {var parts = text.split(';');var part_length = parts.length;var attr_parts;var new_text = '';	for (var i=0; i<part_length; i++) { attr_parts = parts[i].split(':'); if (attr_parts.length == 2 && (attr_parts[0] != 'border' || attr_parts[1] != ' 1px dashed rgb(204, 204, 204)' && attr_parts[1] != ' 1px dotted rgb(255, 0, 0)')) { new_text += attr_parts[0]+':'+attr_parts[1]+';'; }	}	return new_text;}function switch_borders(change){var border_mode;	eval('border_mode = '+active_rich.name+'_rich_border_mode;');	if(change){ border_mode = border_mode==true?false:true; set_state('SwitchBorders', border_mode); eval(active_rich.name+'_rich_border_mode = border_mode;');	} set_borders(border_mode);}function insert_char(){var w = 450;var h = 300;var win = window.open(rich_path+"dialog_char"+rich_dialog_ext+"?lang="+eval(active_rich.name+"_lang")+"&browser=ns&110903u", "dialog_char"+eval(active_rich.name+"_lang"), "modal=yes,width="+w+",height="+h+",left="+((screen.width-w)/2)+",top="+((screen.height-h)/2)+"\"");	win.focus();}function change_toolbar_state(what){var mode;var active_mode;var full_screen_mode;	eval('active_mode = '+active_rich.name+'_rich_active_mode;');	eval('full_screen_mode = '+active_rich.name+'_rich_full_screen_mode;');	set_state('FullScreen', full_screen_mode);	var is_control = false;	try{ var sel = active_rich.getSelection(); var r = sel.getRangeAt(0); if (r.startContainer.nodeType==1) is_control = true;	}catch(error){ return;	}	if(!what || what == "ClassName") set_style("ClassName", get_class());	if (!is_control) {	var rich_doc = re_rich_doc(); if(!what || what == "FontName") set_style("FontName", rich_doc.queryCommandValue('FontName')); if(!what || what == "FontSize") set_style("FontSize", rich_doc.queryCommandValue('FontSize')); if(!what || what == "Bold") set_state("Bold", rich_doc.queryCommandState('Bold')); if(!what || what == "Italic") set_state("Italic", rich_doc.queryCommandState('Italic')); if(!what || what == "Underline") set_state("Underline", rich_doc.queryCommandState('Underline')); if(!what || what == "Strikethrough") set_state("Strikethrough", rich_doc.queryCommandState('Strikethrough')); if(!what || what == "SuperScript") set_state("SuperScript", rich_doc.queryCommandState('SuperScript')); if(!what || what == "SubScript") set_state("SubScript", rich_doc.queryCommandState('SubScript')); if(!what || what == "JustifyLeft") set_state("JustifyLeft", rich_doc.queryCommandState('JustifyLeft')); if(!what || what == "JustifyCenter") set_state("JustifyCenter", rich_doc.queryCommandState('JustifyCenter')); if(!what || what == "JustifyRight") set_state("JustifyRight", rich_doc.queryCommandState('JustifyRight')); if(!what || what == "JustifyFull") set_state("JustifyFull", rich_doc.queryCommandState('JustifyFull')); if(!what || what == "InsertOrderedList")	set_state("InsertOrderedList", rich_doc.queryCommandState('InsertOrderedList')); if(!what || what == "InsertUnorderedList")	set_state("InsertUnorderedList", rich_doc.queryCommandState('InsertUnorderedList')); if(!what || what == "FormatBlock") var container = r.startContainer; set_style("FormatBlock", get_font_block(container.parentNode));	}	if(active_mode){ show_active_buttons();	}}function set_state(what, value){var element; eval('element = document.getElementById("'+what+'_'+active_rich.name+'")');	if(element){ if(value){ element.className = 're_mouse_down'; }else{ element.className = 're_mouse_out'; }	}}function set_style(what, value){var param = null; param = String(value).match(/Heading (.+)/);	if(param) value = '<H'+param[1]+'>';	if(value == 'Normal') value = '<P>';	if(value == 'Formatted') value = '<PRE>'; var element = document.getElementById(what+'_'+active_rich.name);	if(element) element.value = String(value).toLowerCase();}function get_font_block(obj) {	if(obj){ if(obj.className == "re_editor" || !obj.tagName) return '<p>'; var tag_name = obj.tagName.toUpperCase(); if(re_font_blocks.indexOf(tag_name + ',') < 0 || tag_name == 'P'){ return get_font_block(obj.parentNode); } return('<' + tag_name.toLowerCase() + '>');	}	return('<p>');}function show_dialog(action, object){var mode;var is_control;var attrib;var parameters;var link_text;var element;var link;var i;var param;var outerHTML = '';var text_class;var button_object;var is_br = false;var tab;	eval('mode = '+active_rich.name+'_rich_mode;');	active_rich.focus(); if(!mode && !(action == 'Help' || action == 'Preview' || action == 'Save')) return;	if(mode){ try{var sel = active_rich.getSelection();var r = sel.getRangeAt(0);var container = r.startContainer;var container_type = container.nodeType; }catch(error){ return; }	} if(container_type == 1){ is_control = true; element = container.childNodes[r.startOffset]; if (!element) return; if (element.tagName == 'BR') is_br = true;	}else is_control = false;	switch(action){ case "CreateTable": if (!is_control || is_br) show_table_dialog(null, true); break; case "EditTable": if (get_previous_object(container.parentNode,'TABLE')) { show_table_dialog(); } break; case "EditRow": tab = 'tr'; case "EditCell": if(is_control) break; if(container.parentNode){ var td = get_previous_object(container.parentNode,'TD'); if(td){ if (!tab) tab = 'td'; show_table_dialog(null, false, tab); } } break; case "CreateImage": if (is_control && element.tagName != 'IMG' && !is_br) break; show_image_dialog(); break; case "CreateLink": if (is_control) { link = get_previous_object(element,'A'); } else { if(container.parentNode){ link = get_previous_object(container.parentNode,'A'); } else link = null; } if(!link && !is_control && container_type != 3) break; if(!link && !is_control){ if (is_a_inside() != 'no') break; } if(!link || link.innerHTML != "") show_link_dialog(""); break; case "CreateAnchor": if(!is_control && container.parentNode){ link = get_previous_object(container.parentNode,'A'); if (link && link.href != '') break; } if (is_a_inside() == 'empty' || link || is_control && element.tagName == 'A' && element.href=='') show_object_dialog('anchor'); break; case "Help": var name = active_rich.name; var lang = eval(name+"_lang"); window.open(rich_path+"lang/help_"+lang+rich_dialog_ext+"?lang="+lang,"re_help_"+lang, "toolbar=0,scrollbars=yes,resizable=yes"); break; case "Preview": var pre_window; var editor_content; var page_mode; var border_mode; var name; var abs_path; var i; name = active_rich.name; eval('var mode = '+active_rich.name+'_rich_mode;'); eval('var rich_css = '+name+'_rich_css;'); editor_content = get_rich_content(active_rich); editor_content += get_default_stylesheets(); pre_window = window.open('', '', 'toolbar=yes,location=yes,status=yes,menubar=yes,scrollbars=yes,resizable=yes,titlebar=1'); pre_window.document.write(editor_content); pre_window.document.close(); break; case "CreateForm": if(!is_control || is_br){ show_form_dialog("form"); } break; case "CreateText": if(!is_control || is_br || is_control && element.tagName == 'INPUT' && (element.type.toUpperCase() == 'TEXT' || element.type.toUpperCase() == 'PASSWORD')){ show_form_dialog("text"); } break; case "CreateTextArea": if(!is_control || is_br || is_control && element.tagName == 'TEXTAREA'){ show_form_dialog("textarea"); } break; case "CreateButton": if (!is_control || is_br || is_control && element.tagName == 'INPUT' && (element.type.toUpperCase() == 'BUTTON' || element.type.toUpperCase() == 'RESET' || element.type.toUpperCase() == 'SUBMIT')) { show_form_dialog("button"); } break; case "CreateHidden": if(!is_control || is_br || is_control && element.tagName == 'INPUT' && element.getAttribute('type2') && element.getAttribute('type2').toUpperCase() == 'HIDDEN'){ show_form_dialog("hidden"); } break; case "CreateCheckBox": case "CreateRadio": var element_type; if(action == 'CreateCheckBox'){ element_type = 'checkbox'; }else{ element_type = 'radio'; } if(!is_control || is_br || is_control && element.tagName == 'INPUT' && element.type.toUpperCase() == element_type.toUpperCase()){ show_form_dialog(element_type); } break; case "CreateSelect": if(!is_control || is_br || is_control && element.tagName == 'SELECT'){ show_form_dialog("select"); } break; case "InsertSnippet": if(!is_control || is_br){ show_form_dialog("snippet"); } break; case "PasteWord": if(!is_control || is_br){ show_form_dialog("paste_word"); } break; case "PageProperties": show_page_dialog(); break; case "Find": var name = active_rich.name; var lang = eval(name+"_lang"); var w = 400; var h = 150; var win = window.open(rich_path+"dialog_find"+rich_dialog_ext+"?lang="+lang+"&browser=ns&110903b","dialog_find"+name,"modal=yes,width="+w+",height="+h+",left="+((screen.width-w)/2)+",top="+((screen.height-h)/2)+"\""); win.focus(); break; default: break;	}}function show_table_dialog(name, create_mode, tab){	return show_object_dialog('table', name, create_mode, tab);}function show_image_dialog(attrib, name){	return show_object_dialog('image', name);}function show_link_dialog(attrib, name){	return show_object_dialog('link', name);}function show_page_dialog(){	return show_object_dialog('page');}function show_object_dialog(object, name, create_mode, tab){var w;var h;	if (!object) return;	if (!name) var name = active_rich.name; if (create_mode) var do_create = 'true'; else var do_create = '';	if (tab) var tab_code = '&tab='+tab; else var tab_code = '';	var suffix = "_ns";	switch(object){ case 'table': w = 500; h = 500; suffix = ""; break; case 'image': w = 415; h = 435; break; case 'link': w = 410; h = 440; break; case 'page': w = 350; h = 430; break; case 'anchor': w = 200; h = 10; suffix = ""; break; default: return;	}	var win = window.open(rich_path+"dialog_"+object+suffix+rich_dialog_ext+"?files_path="+eval(name+"_files_path")+"&files_url="+eval(name+"_files_url")+"&browser=ns&lang="+eval(name+"_lang")+"&name="+name+"&do_create="+do_create+"&re_ext="+rich_dialog_ext+tab_code+"&"+rich_sess_param+"&110903jfffffffe","dialog_"+object+eval(name+"_lang"),"modal=yes,width="+w+",height="+h+",left="+((screen.width-w)/2)+",top="+((screen.height-h)/2)+"\"");	win.focus();}function pick_color(name, action, color){var color_str = '';	if(!name) var name = active_rich.name; if (color) { color = dec2hex(color); color_str = "&color=%23"+color;	}	var w = 445;	var h = 140;	var win = window.open(rich_path+"pick_color_ns"+rich_dialog_ext+"?lang="+eval(name+"_lang")+'&action='+action+"&name="+name+color_str+"&110903b","dialog_color","modal=yes,width="+w+",height="+h+",left="+((screen.width-w)/2)+",top="+((screen.height-h)/2)+"\"");	win.focus();}function get_previous_object(obj,tag_name) {	if (obj) { if (obj.className == "re_editor") return null; if (obj.tagName != tag_name){ obj = get_previous_object(obj.parentNode, tag_name); }	}	return(obj);}function insert_row(ins_to){var sel = active_rich.getSelection();var range = sel.getRangeAt(0);var container = range.startContainer;var tr;var table;var row;var i;var curr_colspan;	tr = get_previous_object(container.parentNode,'TR');	table = get_previous_object(tr,'TABLE');	if(table != null){ var cell_width = 100/tr.cells.length+'%'; row = table.insertRow(tr.rowIndex+ins_to); for(i=0;i<tr.cells.length;i++){ var cell = row.insertCell(i); cell.innerHTML = '&nbsp;'; var attr = new Array('width', 'height', 'vAlign', 'bgColor'); var j; for (j in attr) { var attr_value = eval('tr.cells[i].getAttribute("'+attr[j]+'")'); eval('if(attr_value) cell.setAttribute("'+attr[j]+'", attr_value)'); } curr_colspan = tr.cells[i].colSpan; if(curr_colspan > 1){ cell.colSpan = curr_colspan; } }	}}function delete_row(){var sel = active_rich.getSelection();var range = sel.getRangeAt(0);var container = range.startContainer;var tr;var table;	tr = get_previous_object(container.parentNode,'TR');	table = get_previous_object(tr,'TABLE');	if(table != null){ if(table.rows.length <= 1){ table.parentNode.removeChild(table); }else{ table.deleteRow(tr.rowIndex); }	}}function insert_column(ins_to){var sel = active_rich.getSelection();var range = sel.getRangeAt(0);var container = range.startContainer;var td;var table;var i;var curr_rowspan;var cell_index;var rowspan_index;var curr_index;	td = get_previous_object(container.parentNode,'TD');	table = get_previous_object(td,'TABLE');	if(table != null){ curr_index = td.cellIndex; for(i=0;i<table.rows.length;i++){ if(curr_index+ins_to > table.rows[i].cells.length){ cell_index = table.rows[i].cells.length; }else{ cell_index = curr_index+ins_to; } if(curr_index < table.rows[i].cells.length){ rowspan_index = curr_index; }else{ rowspan_index = table.rows[i].cells.length-1; } var j = -1; var attr = new Array('width', 'height', 'vAlign', 'bgColor'); if (rowspan_index<0) curr_rowspan = 1; else { var tr = table.rows[i].cells[rowspan_index]; curr_rowspan = tr.rowSpan; for (j in attr) { eval('var '+attr[j]+'=tr.getAttribute("'+attr[j]+'")'); } } var cell = table.rows[i].insertCell(cell_index); cell.innerHTML = '&nbsp;'; if(j != -1){ for (j in attr) { eval('if('+attr[j]+') cell.setAttribute("'+attr[j]+'", '+attr[j]+')'); } } if(curr_rowspan > 1){ cell.rowSpan = curr_rowspan; i += curr_rowspan-1; } }	}}function delete_column(){var sel = active_rich.getSelection();var range = sel.getRangeAt(0);var container = range.startContainer;var td;var table;var i;var tr;var cell_index;	td = get_previous_object(container.parentNode,'TD');	table = get_previous_object(td,'TABLE');	if (table != null) { cell_index = td.cellIndex; for (i=0;i<table.rows.length;i++) { tr = table.rows[i]; if (tr.cells.length<=1) { table.deleteRow(i); i--; } else { if (cell_index < tr.cells.length) { if (tr.cells[cell_index].rowSpan>1) { i+=tr.cells[cell_index].rowSpan-1; } tr.deleteCell(cell_index); } } } if (table.rows.length == 0) { table.parentNode.removeChild(table); }	}}function insert_cell(){var sel = active_rich.getSelection();var range = sel.getRangeAt(0);var container = range.startContainer;var td;var tr;	td = get_previous_object(container.parentNode,'TD');	tr = get_previous_object(td,'TR');	if(tr != null){ tr.insertCell(td.cellIndex+1); var new_td = tr.cells[td.cellIndex+1]; new_td.innerHTML = '&nbsp;';	}}function delete_cell(){var sel = active_rich.getSelection();var range = sel.getRangeAt(0);var container = range.startContainer;var td;var table;var tr;	td = get_previous_object(container.parentNode,'TD');	tr = get_previous_object(td,'TR');	table = get_previous_object(tr,'TABLE');	if(table != null){ if(tr.cells.length<=1){ table.deleteRow(tr.rowIndex); if(table.rows.length == 0){ table.parentNode.removeChild(table); } }else{ tr.deleteCell(td.cellIndex); }	}}function merge_cells(){ var sel = active_rich.getSelection();var range = sel.getRangeAt(0);var container = range.startContainer;var td;var tr;var next_td;	td = get_previous_object(container.parentNode,'TD');	tr = get_previous_object(td,'TR'); if(tr != null && td.cellIndex < tr.cells.length-1){ next_td = tr.cells[td.cellIndex+1]; td.innerHTML += next_td.innerHTML; td.colSpan += next_td.colSpan; tr.deleteCell(td.cellIndex+1); } } function split_cell(){var sel = active_rich.getSelection();var range = sel.getRangeAt(0);var container = range.startContainer;var td;var tr;	td = get_previous_object(container.parentNode,'TD');	tr = get_previous_object(td,'TR');	if(tr != null && td.colSpan > 1){ td.colSpan--; tr.insertCell(td.cellIndex+1); var new_td = tr.cells[td.cellIndex+1]; new_td.rowSpan = td.rowSpan; new_td.innerHTML = '&nbsp;'; var width = tr.cells[td.cellIndex].width; new_td.setAttribute("width", width);	}} function merge_cells_down(split_cell){ var next_td;var sel = active_rich.getSelection();var r = sel.getRangeAt(0);var container = r.startContainer;var td = get_previous_object(container.parentNode,'TD');var tr = get_previous_object(td,'TR');var table = get_previous_object(tr,'TABLE'); if (!(tr != null && (td.rowSpan > 1 && split_cell || tr.rowIndex+td.rowSpan < table.rows.length && !split_cell))) return;	var split_inc = split_cell?1:0; var i;	var real_cell = 0;	var real_cell2 = 0;	for (i=0; i<tr.cells.length&&i<td.cellIndex; i++) { real_cell += tr.cells[i].colSpan; var inc = tr.cells[i].rowSpan-td.rowSpan+split_inc; real_cell2 += inc>0?tr.cells[i].colSpan:0;	}	var tr2 = table.rows[tr.rowIndex+td.rowSpan-split_inc];	if (!tr2) return;	var tr2_cells = tr2.cells; for (i=0; i<tr2_cells.length; i++) { if (real_cell2 >= real_cell) break; real_cell2 += tr2_cells[i].colSpan;	}	if (!split_cell) { try { var td2 = tr2_cells[i]; } catch(e){ return; } if (!td2) return; td.innerHTML += td2.innerHTML; td.rowSpan += td2.rowSpan; tr2.deleteCell(i);	} else { td.rowSpan--; try { var cell = tr2.insertCell(i); } catch(e){ return; } if (!cell) return; cell.colSpan = td.colSpan; cell.innerHTML = '&nbsp;'; eval('var border_mode = '+active_rich.name+'_rich_border_mode;'); if (border_mode) cell.style.border = '1px dashed #CCCCCC';	}} function show_form_dialog(action){var w;var h;	switch(action){ case 'form': w = 351; h = 160; break; case 'text': w = 243; h = 300; break; case 'textarea': w = 250; h = 285; break; case 'button': w = 253; h = 200; break; case 'hidden': w = 300; h = 160; break; case 'checkbox': w = 283; h = 205; break; case 'radio': w = 253; h = 205; break; case 'select': w = 331; h = 310; break; case 'snippet': w = 305; h = 363; break; case 'paste_word': w = 305; h = 300; break; default: w = 331; h = 200; break;	}	var win = window.open(rich_path+"dialog_form"+rich_dialog_ext+"?action="+action+"&browser=ns&lang="+eval(active_rich.name+"_lang")+"&110903b","dialog_form"+action+eval(active_rich.name+"_lang"),"modal=yes,width="+w+",height="+h+",left="+((screen.width-w)/2)+",top="+((screen.height-h)/2)+"\"");	win.focus();}function insert_snippet(value){var sel = active_rich.getSelection();var range;var snippets;	if(sel) range = sel.getRangeAt(0); else return;	var container = range.startContainer;	var container_type = container.nodeType;	var is_br = re_is_br(range, container);	if(value!=null && range && (container_type != 1 || is_br)){ var s_parts = String(value).match(/^([^_]*)_([0-9]+)$/); if(!s_parts) return; var s_group = s_parts[1]; var s_value = s_parts[2]; eval('snippets = '+active_rich.name+'_snippets;'); if(snippets && snippets[s_group] && snippets[s_group][s_value] && snippets[s_group][s_value][1]){ paste_html(snippets[s_group][s_value][1]); }	}}var re_font_blocks = 'P,H1,H2,H3,H4,H5,H6,PRE,';function add_handlers(editor){	eval('var ed_regs = '+active_rich.name+'_editable_regions;');	if (ed_regs) return;var re_onkeydown = function(e) {	if (e.ctrlKey && (e.which == 86 || e.which == 118)) { eval('var clean_paste = '+active_rich.name+'_clean_paste;'); if (clean_paste) { e.preventDefault(); e.stopPropagation(); do_action('PasteWord'); }	}	eval('var br_on_enter = '+active_rich.name+'_br_on_enter;');	if (br_on_enter) br_on_enter = true;	if (br_on_enter == e.shiftKey && e.which == 13) {	var sel = active_rich.getSelection();	var range = sel.getRangeAt(0);	var container = range.startContainer; var li_el = get_previous_object(container, 'LI'); if (li_el) return; range.deleteContents(); var parent = container.parentNode; var parent_parent = parent.parentNode; if(parent && parent_parent && re_font_blocks.indexOf(parent.tagName + ',') != -1) { var p_tag = parent.tagName; var node = document.createElement('P'); node.innerHTML = '&nbsp;'; var text_node = document.createTextNode(container.nodeValue); var start_pos = range.startOffset; var end_pos = range.endOffset; var prev_text = text_node.nodeValue.substr(0, start_pos); var post_text = text_node.nodeValue.substr(end_pos); var prev_text_node = document.createTextNode(prev_text); var post_text_node = document.createTextNode(post_text); var prev_node = document.createElement(p_tag); prev_node.appendChild(prev_text_node); var post_node = null; if (post_text != '') { post_node = document.createElement(p_tag); post_node.appendChild(post_text_node); } if (post_node) { parent_parent.insertBefore(post_node, parent); } else post_node = parent; parent_parent.insertBefore(node, post_node); if (prev_text != '') parent_parent.insertBefore(prev_node, node); parent_parent.removeChild(parent); range.setStart(node, 0); range.setEnd(node, 0); } else { var new_obj = document.createElement('P'); new_obj.innerHTML = '&nbsp;'; paste_node(new_obj, true); } e.preventDefault(); e.stopPropagation();	}};var re_onmouseup = function(e){	re_hide_lists();	active_rich=editor;	re_hide_context();	change_toolbar_state();};var re_mouse_down = function(e){ if (e.which == 3) return;	active_rich=editor;	eval('var first_click = '+active_rich.name+'_first_click;');	if (first_click) { try{ eval(active_rich.name + '_id.document.designMode = "Off";'); eval(active_rich.name + '_id.document.designMode = "On";'); }catch(error){ } eval(active_rich.name+'_first_click = 0;');	}};var re_contextmenu = function(e){	re_hide_lists();	active_rich=editor;	re_hide_context();	change_toolbar_state(); window.setTimeout("re_show_context("+eval("e.clientX")+", "+eval("e.clientY")+")", 10);	e.preventDefault();	e.stopPropagation();};var re_doc_click = function(e){	re_hide_lists();};var re_onkeyup = function(e){	active_rich=editor; if (e.which > 36 && e.which < 41 ||	e.which == 8 || e.which == 46) { change_toolbar_state();	} else { eval('var active_mode = '+active_rich.name+'_rich_active_mode;'); if (active_mode) { var rich_doc = re_rich_doc(); show_button('Undo', rich_doc.queryCommandEnabled('Undo')); }	}};	editor.document.addEventListener('keypress', re_onkeydown, true);	editor.document.addEventListener('click', re_onmouseup, true);	editor.document.addEventListener('contextmenu', re_contextmenu, true);	editor.document.addEventListener('mousedown', re_mouse_down, true);	document.addEventListener('click', re_doc_click, true);	editor.document.addEventListener('keyup', re_onkeyup, true);}function re_hide_context(){var cx_div = document.getElementById('re_context_div_id');	cx_div.style.display = 'none';}function re_start_hide_context(){	document.removeEventListener('mouseup', re_start_hide_context, true); window.setTimeout('re_hide_context()', 10);}function re_show_context(x, y){var height = 4;var td_height = 20;var hr_height = 4;var char_width = 8;var max_chars = 0;var do_hr = false;var flag = false;var flag2 = false;var element;var innerHTML = '';var is_control = false;	try {var sel = active_rich.getSelection();var r = sel.getRangeAt(0);var container = r.startContainer;var container_type = container.nodeType;var parent = container.parentNode;	} catch(error) { return false;	} if (container_type == 1) { element = container.childNodes[r.startOffset]; if (!element) return false; if (element.tagName != 'BR') is_control = true;	}	eval('var mode = '+active_rich.name+'_rich_mode;');	eval('var lang = '+active_rich.name+'_lang;'); eval('var mb = '+active_rich.name+'_rich_mb;'); if (mb != '') char_width = 14;	eval('var rich_cx = rich_cx_'+lang);	eval('var rich_cx_item = rich_cx_item_'+lang);	eval('var rich_cx_name = rich_cx_name_'+lang);	eval('var rich_cx_image = rich_cx_image_'+lang);	eval('var rich_cx_length = rich_cx_length_'+lang);	if (mode) { if (!is_control) { var link = get_previous_object(parent,'A'); var do_image = get_button_object('CreateImage'); var do_link = (link || container_type == 3 && is_a_inside() == 'no') && get_button_object('CreateLink'); var do_table = get_button_object('CreateTable'); var do_form = get_previous_object(parent,'FORM') && get_button_object('CreateForm'); if (do_image || do_link || do_table || do_form) { do_hr = true; } if (do_image) { innerHTML += get_popup_menu_item(rich_cx['ADDIMAGE'], 'CreateImage', 'image', null, true); max_chars=Math.max(max_chars, rich_cx['ADDIMAGE'].length); height += td_height; } if (do_link) { if (link) { link_name = rich_cx['EDITLINK']; chars = rich_cx['EDITLINK'].length; } else { link_name = rich_cx['ADDLINK']; chars = rich_cx['ADDLINK'].length; } innerHTML += get_popup_menu_item(link_name, 'CreateLink', 'link', null, true); max_chars=Math.max(max_chars, chars); height += td_height; } if (do_form) { innerHTML += get_popup_menu_item(rich_cx['EDITFORM'], 'CreateForm', 'form', null, true); max_chars=Math.max(max_chars, rich_cx['EDITFORM'].length); height += td_height; } if (do_table) { innerHTML += get_popup_menu_item(rich_cx['ADDTABLE'], 'CreateTable', 'table', null, true); max_chars=Math.max(max_chars, rich_cx['ADDTABLE'].length); height += td_height; var td = get_previous_object(parent,'TD'); var tr = get_previous_object(td,'TR'); var table = get_previous_object(tr,'TABLE'); if (td) { innerHTML += get_popup_menu_item(rich_cx['TABLE'][0], 'EditTable', 'table_prop', null, true); max_chars=Math.max(max_chars, rich_cx['TABLE'][0].length); height += td_height; innerHTML += get_popup_menu_item(rich_cx['EDITROW'], 'EditRow', 'row_prop', null, true); max_chars=Math.max(max_chars, rich_cx['EDITROW'].length); height += td_height; innerHTML += get_popup_menu_item(rich_cx['EDITCELL'], 'EditCell', 'cell_prop', null, true); max_chars=Math.max(max_chars, rich_cx['EDITCELL'].length); height += td_height; for(i=0;i<rich_cx_length;i++){ if(get_button_object(rich_cx_item[i])){ if(i<=3 && do_hr && !flag2){ innerHTML += get_popup_menu_item('<HR>'); height += hr_height; flag2 = true; } if(i>3 && do_hr && !flag){ innerHTML += get_popup_menu_item('<HR>'); height += hr_height; flag = true; } innerHTML += get_popup_menu_item(rich_cx_name[i], rich_cx_item[i], rich_cx_image[i]); max_chars=Math.max(max_chars, rich_cx_name[i].length); height += td_height; do_hr = true; } } } if(tr && td.cellIndex<tr.cells.length-1 && get_button_object('MergeCells')){ if(!flag){ innerHTML += get_popup_menu_item('<HR>'); height += hr_height; flag = true; } innerHTML += get_popup_menu_item(rich_cx['MERGE'], 'MergeCells', 'mergecells'); max_chars=Math.max(max_chars, rich_cx['MERGE'].length); height += td_height; } if(tr && td.colSpan > 1 && get_button_object('SplitCell')){ if(!flag){ innerHTML += get_popup_menu_item('<HR>'); height += hr_height; } innerHTML += get_popup_menu_item(rich_cx['SPLIT'], 'SplitCell', 'splitcell'); max_chars=Math.max(max_chars, rich_cx['SPLIT'].length); height += td_height; } if(table && tr.rowIndex+td.rowSpan<table.rows.length && get_button_object('MergeCellsDown')){ if(!flag){ innerHTML += get_popup_menu_item('<HR>'); height += hr_height; flag = true; } innerHTML += get_popup_menu_item(rich_cx['MERGEDOWN'], 'MergeCellsDown', 'mergecellsdown'); max_chars=Math.max(max_chars, rich_cx['MERGEDOWN'].length); height += td_height; } if(td && td.rowSpan > 1 && get_button_object('SplitCellDown')){ if(!flag){ innerHTML += get_popup_menu_item('<HR>'); height += hr_height; } innerHTML += get_popup_menu_item(rich_cx['SPLITDOWN'], 'SplitCellDown', 'splitcelldown'); max_chars=Math.max(max_chars, rich_cx['SPLITDOWN'].length); height += td_height; } } } else { var tag_name = element.tagName; if (tag_name == 'INPUT') { tag_name = element.type.toUpperCase(); var tag_name2 = element.getAttribute('type2'); if (tag_name2 && String(tag_name2).toUpperCase() == 'HIDDEN') tag_name = 'HIDDEN'; } if (tag_name != 'HIDDEN' && get_button_object('CreateLink')) { if (do_hr) { innerHTML += get_popup_menu_item('<HR>'); height += hr_height; } var link=get_previous_object(element, 'A'); var action = 'CreateLink'; if (link) { if (link.href == "") { link_name = rich_cx['EDITANCHOR']; action = 'CreateAnchor'; } else link_name = rich_cx['EDITLINK']; } else link_name = rich_cx['ADDLINK']; innerHTML += get_popup_menu_item(link_name, action, 'link', null, true); max_chars=Math.max(max_chars, link_name.length); height += td_height; do_hr = true; } if (rich_cx[tag_name] && get_button_object(rich_cx[tag_name][1])) { if (do_hr) { innerHTML += get_popup_menu_item('<HR>'); height += hr_height; } innerHTML += get_popup_menu_item(rich_cx[tag_name][0], rich_cx[tag_name][1], rich_cx[tag_name][2], null, true); max_chars=Math.max(max_chars, rich_cx[tag_name][0].length); height += td_height; do_hr = true; } }	} else return false;	if (innerHTML == '') return false;	var width = max_chars*char_width+40;	innerHTML = get_popup_menu_body(innerHTML);	var cx_div = document.getElementById('re_context_div_id');	var ed_pos = get_element_pos(active_rich.frameElement); var win_size = re_get_window_size();	var check_left = x+ed_pos[0];	var check_top = y+ed_pos[1]; if (check_left + width - document.documentElement.scrollLeft - document.body.scrollLeft> win_size[0]) check_left = win_size[0] - width + document.documentElement.scrollLeft + document.body.scrollLeft;	if (check_top + height - document.documentElement.scrollTop - document.body.scrollTop > win_size[1]) check_top = win_size[1] - height + document.documentElement.scrollTop + document.body.scrollTop;	check_left = Math.max(check_left, 0);	check_top = Math.max(check_top, 0);	cx_div.style.left = check_left+'px';	cx_div.style.top = check_top+'px';	cx_div.innerHTML = innerHTML;	cx_div.style.display = ''; document.addEventListener('mouseup', re_start_hide_context, true);	return innerHTML;}function get_popup_menu_item(name, action, img_name, value, is_dialog){var code = '';	code += '<tr>';	if(name != '<HR>'){ code += '<td id="rich_cx_'+action+'" onclick="'; if(is_dialog){ code += 'show_dialog(\''+action+'\');'; }else{ code += 'do_action(\''+action+'\''; if(value != null) code += ',\''+value+'\''; code += ');'; } code += ' re_hide_context();" style="cursor:pointer; font-family:Courier; font-size:13px;"'; code += ' onmouseover="context_over(this, true);"'; code += ' onmouseout="context_over(this);">';	}else{ code += '<td height="4">';	}	code += '<nobr>';	if(img_name){ code += '<img src="'+rich_path+'images/'+img_name+'.gif" width="20" height="20" alt="'+name+'" align="absmiddle" hspace="4">';	}else{ code += '<img src="'+rich_path+'images/space.gif" width="20" height="1" hspace="4">';	}	if(name != '<HR>'){ code += name;	}else{ code += '<br><img src="'+rich_path+'images/space.gif" width="100%" height="1" style="BACKGROUND-COLOR: buttonshadow"><br>'; code += '<img src="'+rich_path+'images/space.gif" width="100%" height="1" style="BACKGROUND-COLOR: buttonhighlight"><br>';	}	code += '<img src="'+rich_path+'images/space.gif" width="8" height="1"></nobr>';	code += '</td></tr>';	return code;}function get_popup_menu_body(innerHTML){var code = '';	code += '<table cellspacing="0" cellpadding="0" border="0" class="re_context">';	code += '<tr><td>';	code += '<table id="popup_table" cellspacing="0" cellpadding="0" border="0" class="re_context_inner" width="100%" height="100%">';	code += innerHTML;	code += '</table>';	code += '</td></tr>';	code += '</table>';	return code;}function context_over(obj, over){	if(over){ obj.style.backgroundColor = 'Highlight'; obj.style.color = 'HighlightText';	}else{ obj.style.backgroundColor = ''; obj.style.color = '';	}}function get_element_pos(obj){var pos = Array(0,0);	while (obj) { if (document.defaultView.getComputedStyle(obj, '').getPropertyValue('position') == 'absolute') break; pos[0] += obj.offsetLeft; pos[1] += obj.offsetTop; obj = obj.offsetParent;	}	return pos;}function paste_html(html){var border_mode;var el = document.createElement("SPAN"); eval('border_mode = '+active_rich.name+'_rich_border_mode;');	el.innerHTML = html;	paste_node(el); if (el.parentNode && el.childNodes) { var i; var child_nodes_length = el.childNodes.length; for (i=0;i<child_nodes_length;i++) { if (el.childNodes[i]) { var new_node = el.childNodes[i].cloneNode(el.childNodes[i]); el.parentNode.insertBefore(new_node, el); } } el.parentNode.removeChild(el);	} set_borders(border_mode);}function paste_word(html){	paste_html(clean_code(html));	active_rich.focus(); }function clean_code(code) { code = code.replace(/&nbsp;/gi, ""); code = code.replace(/<\\?\??xml[^>]*>/gi, ""); code = code.replace(/<\/?\w+:[^>]*>/gi, ""); code = code.replace(/<p([^>])*>(&nbsp;)*\s*<\/p>/gi,""); code = code.replace(/<\/?span[^>]*>/gi,""); code = code.replace(/<([\w]+) class=([^ |>]*)([^>]*)/gi, "<$1$3"); code = code.replace(/<([^>]+) style="([^"]*)"([^>]*)/gi, "<$1$3");	return code}function get_rich_content(editor, dont_restore_borders) {	if (!editor) return '';var content;var old_active_rich = active_rich;var i;	active_rich = editor; var name = active_rich.name;	eval('var mode = '+active_rich.name+'_rich_mode;');	var xhtml_mode = get_xhtml_mode(); if(!mode){ eval('var text_area = document.getElementById("'+active_rich.name+'_area_id");'); content = text_area.value;	}else{ eval('var page_mode = '+name+'_rich_page_mode;'); eval('var border_mode = '+name+'_rich_border_mode;'); eval('var abs_path = '+name+'_rich_absolute_path;'); if(border_mode){ set_borders(false); } if (xhtml_mode) { eval('var doc_lang = '+active_rich.name+'_rich_doc_lang;'); eval('var doc_charset = '+active_rich.name+'_rich_doc_charset;'); if(!page_mode){ content = get_xhtml(active_rich.document.documentElement, doc_lang, doc_charset); }else{ content = get_xhtml(active_rich.document, doc_lang, doc_charset); } } else { content = active_rich.document.documentElement.innerHTML; if(!page_mode){ content = content.replace(/<\/?head>/gi, ""); content = content.replace(/<\/?body>/gi, ""); }else{ content = '<html>'+content+'</html>'; } } content = delete_default_stylesheets(content); var re = new RegExp('&amp;', 'gi'); RegExp.multiline = true; content = content.replace(re, '&'); content = content.replace(/<!--re_php_tag_open/g, '<?php'); content = content.replace(/re_php_tag_close-->/g, '?>'); content = content.replace(/<!--re_asp_tag_open/g, '<%'); content = content.replace(/re_asp_tag_close-->/g, '%>'); content = format_content(content); if(!abs_path) content = del_base_url(content, 1); content = content.replace(/<b>/gi, '<strong>'); content = content.replace(/<\/b>/gi, '</strong>'); content = content.replace(/<b /gi, '<strong '); content = content.replace(/<i>/gi, '<em>'); content = content.replace(/<\/i>/gi, '</em>'); content = content.replace(/<i /gi, '<em '); if(border_mode && !dont_restore_borders){ set_borders(true); }	}	active_rich = old_active_rich;	return content;}function get_default_stylesheets(){var i;var text = ''; eval('var rich_css = '+active_rich.name+'_rich_css;'); for (i in rich_css) { var link_text = '<link rel="stylesheet" href="'+rich_css[i]+'" type="text/css">'; text += link_text;	}	return text;}function delete_default_stylesheets(editor_content){var i;var name = active_rich.name;var xhtml_mode = get_xhtml_mode();eval('var rich_css = '+name+'_rich_css;');	if (xhtml_mode) var ch = " /"; else var ch = ""; for (i in rich_css) { var re = new RegExp('<link rel="stylesheet" href="'+rich_css[i]+'" type="text/css"'+ch+'>','gi'); var re2 = new RegExp('<link type="text/css" href="'+rich_css[i]+'" rel="stylesheet"'+ch+'>','gi'); RegExp.multiline = true; editor_content=editor_content.replace(re2,''); editor_content=editor_content.replace(re,'');	}	return editor_content;}function get_rich(name) {	if (!name) return '';	if (!active_rich) {	var base_info = get_editor_base_info(name); eval('var text_area = document.getElementById("'+base_info['name']+'_ed'+base_info['id']+'_area_id");'); return text_area.value;	}	return get_rich_content(get_editor_id(name));}function set_rich(name, content) {	if (!name) return '';	if (!active_rich) {	var base_info = get_editor_base_info(name); eval('var text_area = document.getElementById("'+base_info['name']+'_ed'+base_info['id']+'_area_id");'); text_area.value = content; return true;	}	return set_rich_content(get_editor_id(name), content);}function get_editor_id(name) {	var base_info = get_editor_base_info(name);	eval('var editor = '+base_info['name']+'_ed'+base_info['id']+'_id;'); return editor;}function get_editor_base_info(name) {var id;var base_info = new Array();	base_info['id'] = '';	base_info['name'] = name;	var ar_pos = name.indexOf("[");	var id = '';	if (ar_pos > 0) { var ar_end_pos; ar_end_pos = name.length-1; id = name.substring(ar_pos+1, ar_end_pos); base_info['name'] = name.substring(0, ar_pos); var parts = id.split(']['); if (parts) { id = parts.join('_') } else id = ''; base_info['id'] = id;	}	return base_info;}function set_rich_content(editor, content){	if (!editor) return;var mode;var page_mode;var border_mode;var i;var text;var button_id_parts;var button_name;var editror_name;var text_area;var rich_obj;var old_active_rich = active_rich;	active_rich = editor;	eval('mode = '+active_rich.name+'_rich_mode;');	eval('page_mode = '+active_rich.name+'_rich_page_mode;');	eval('border_mode = '+active_rich.name+'_rich_border_mode;');	eval('text_area = document.getElementById("'+active_rich.name+'_area_id");');	eval('rich_obj = document.getElementById("'+active_rich.name+'_id");');	var xhtml_mode = get_xhtml_mode(); text = content;	if(!mode){ if(!page_mode || xhtml_mode){ }else{ text = '<html>'+text+'</html>'; } text_area.value = text;	}else{ text = text.replace(/<\?php/gi, '<!--re_php_tag_open'); text = text.replace(/\?>/g, 're_php_tag_close-->'); text = text.replace(/<%/g, '<!--re_asp_tag_open'); text = text.replace(/%>/g, 're_asp_tag_close-->'); if(!page_mode){ if (!text) text = '<br>'; text += get_default_stylesheets(); var head_tag = active_rich.document.getElementsByTagName('HEAD')[0]; head_tag.innerHTML = ''; active_rich.document.body.innerHTML = text; }else{ var head = ''; var body = '<br>'; if (text != '') { var head_parts = text.split(/<[\/]?head[^>]*>/); if (head_parts[1]) head = head_parts[1]; var body_parts = text.split(/<[\/]?body[^>]*>/); if (body_parts[1]) body = body_parts[1]; var body_attr = null; var body_temp = text.split(/<body /); if (body_temp[1]) { body_attr = body_temp[1].split(/>/)[0]; } var attribs; if(body_attr){ attribs = body_attr.split(/[ \t]+/); }else attribs = null; } active_rich.document.body.innerHTML = ''; active_rich.document.body.innerHTML = body; var head_tag = active_rich.document.getElementsByTagName('HEAD')[0]; var old_attr = active_rich.document.body.attributes; var old_attr_length = old_attr.length; for (i=0;i<old_attr_length;i++) { active_rich.document.body.removeAttribute(old_attr.item(0).name); } if (body_attr) { for (i in attribs){ var value = attribs[i].match(/([^=]*)=(.*)/); if(value){ if(value[1] == 'style'){ active_rich.document.body.style = value[2]; }else active_rich.document.body.setAttribute(value[1],value[2].replace(/\"/g,'')); } } } head += get_default_stylesheets(); head_tag.innerHTML = head; } if(border_mode){ set_borders(true); } set_stylesheet_rules();	}	active_rich = old_active_rich;	return true;}function get_xhtml_mode(){	eval('var xhtml_mode = '+active_rich.name+'_rich_xhtml_mode;');	try { var is_xhtml = get_xhtml?true:false;	} catch(e) { var is_xhtml = false;	}	return xhtml_mode&&is_xhtml?true:false;}function span2font(el){	if (!el) return;var i,j;var child_spans = el.getElementsByTagName('SPAN');var child_length = child_spans.length; for (i=0;i<child_length;i++) { span2font(child_spans[i]);	}var new_node = document.createElement('FONT');	new_node.innerHTML = el.innerHTML;var attr = el.attributes;var attr_length = attr.length; for (j=0;j<attr_length;j++) { if (!attr[j].specified) continue; var attr_name = attr[j].nodeName.toLowerCase(); if (attr_name = 'style') { new_node.style.cssText = el.style.cssText; } else { if (attr_name == 'class') { new_node.className = el.className; } else { new_node.setAttribute(attr_name, el.getAttribute(attr_name, 2)); } }	}	el.parentNode.insertBefore(new_node, el);	el.parentNode.removeChild(el);}function fix_font_style(el){	var css_text = String(el.style.cssText);	css_text = css_text.replace('background-color: rgb(0, 0, 1);', '');	css_text = css_text.replace('color: rgb(0, 0, 1);', '');	css_text = css_text.replace(/(^\s+)|(\s+$)/,'');	if (css_text == '') el.removeAttribute('style'); else el.style.cssText = css_text;}function dec2hex(num) {var colors = num.match(/rgb\(([0-9]+), ([0-9]+), ([0-9]+)\)/);var i;var hex_num = '';	if (colors) { for (i=1;i<=3;i++) { var d1 = colors[i]>>4; var d2 = colors[i]&0x0f; hex_num += d1.toString(16)+d2.toString(16); } return hex_num;	}	return 'ffffff';}function insert_to(action) {var sel = active_rich.getSelection();var range = sel.getRangeAt(0);var container = range.startContainer;	if(!get_previous_object(container.parentNode,'TABLE')) return;	var lang = eval(active_rich.name+"_lang");	var w = 300;	var h = 100;	var win = window.open(rich_path+"dialog_adv_table"+rich_dialog_ext+"?lang="+lang+"&action="+action+"&browser=ns&110903f","dialog_adv_table"+lang,"modal=yes,width="+w+",height="+h+",left="+((screen.width-w)/2)+",top="+((screen.height-h)/2)+"\"");	win.focus();}function re_enable(id) {var obj = document.getElementById(id);	obj.disabled = false;}function re_show_list(sel_obj, h2content){var i;var j;	re_hide_context();var obj = document.getElementById(sel_obj.id + '_iframe');	if (obj.style.display == '') { obj.style.display = 'none'; return;	}	re_hide_lists();	var obj_doc = obj.contentWindow.document; var parts = String(obj.id).split('_');	var type = parts[0];	var style_text = '';	if (type == 'ClassName') { var styles = active_rich.document.styleSheets; var sheets_num = styles.length; for (i=0; i<sheets_num; i++) { var rules = null; try { rules = styles[i].cssRules; } catch(error) { continue; } if (rules != null) { rules_num = rules.length; for (j=0; j<rules_num; j++) { style_text += rules[j].cssText; } } }	}var content = '<html>'+'<head><style type="text/css">'+style_text+'td:hover.re_list{background-color:Highlight;color:HighlightText}</style></head>'+'<body topmargin=0 leftmargin=0 rightmargin=0 bottommargin=0 style="background:#ffffff">'+'<div id="content_div" style="overflow:hidden; width:100%;">'+'<table border="0" style="cursor:pointer" cellspacing="0" width="100%">';	var sel_len = sel_obj.options.length;	var sel_opt = sel_obj.options;	if (!sel_len) return;	for (i=0;i<sel_len;i++) { if (i == 0 && type != 'ClassName') continue; content += '<tr><td class="re_list" onClick="parent.do_action(\''+type+'\', \''+sel_opt[i].value+'\');">'; switch (type) { case 'FormatBlock': content += sel_opt[i].value+String(sel_opt[i].text).replace(/ /g, '&nbsp;'); break; case 'FontName': content += '<nobr><font face="'+sel_opt[i].value+'">'+sel_opt[i].text+'</font></nobr>'; break; case 'FontSize': content += '&nbsp;&nbsp;&nbsp;&nbsp;<font size="'+sel_opt[i].value+'">'+sel_opt[i].text+'</font>&nbsp;&nbsp;&nbsp;&nbsp;'; break; case 'ClassName': content += '<nobr><span class="'+sel_opt[i].value+'">'+(sel_opt[i].text!=''?sel_opt[i].text:'&nbsp;')+'</span></nobr>'; break; default: break; } content += '</td></tr>';	}	content += '</table>'+'</div>'+'</body></html>';	obj.style.display = ""; obj_doc.open();	obj_doc.write(content);	obj_doc.close();var sel_pos = get_element_pos(sel_obj);	obj.style.left = sel_pos[0] + 'px';	obj.style.top = sel_pos[1] + sel_obj.offsetHeight + 'px';	var new_height = obj_doc.getElementById('content_div').offsetHeight;	if (h2content || new_height < obj.getAttribute('ini_height')) { obj.height = new_height;	} else obj.height = obj.getAttribute('ini_height');}function re_hide_lists(){var iframes = document.body.getElementsByTagName("IFRAME");var i;	for (i=0; i<iframes.length; i++) { var obj = iframes[i]; if (obj.className == 're_list_iframe') if (obj.style.display == '') { obj.style.display = 'none'; var list_id = String(obj.id).replace(/_iframe$/,''); var list = document.getElementById(list_id); list.disabled = false; }	}}function re_rich_doc(){	return document.getElementById(active_rich.name+'_id').contentWindow.document;}var re_can_compare;function is_a_inside(obj){ try{var sel = active_rich.getSelection();var r = sel.getRangeAt(0);var container = r.startContainer;var container_type = container.nodeType; }catch(error){ return false; }	if(container_type == 1 && !re_is_br(r, container)) return 'no';	if (String(r) == "") return 'empty'; return 'no';}function re_is_br(r, container) {	if (container.nodeType != 1) return false;	element = container.childNodes[r.startOffset];	if (element && element.tagName == 'BR') return true;	return false;}function format_content(code){var i;var xhtml_mode = get_xhtml_mode();var need_nl_before = /\<(div|p|table|tbody|thead|tr|td|th|title|script|comment|li|meta|h1|h2|h3|h4|h5|h6|hr|ul|ol|option|link|pre)[^\>]*\>/gi;var need_nl_after = /\<\/(div|p|table|tbody|thead|tr|td|th|title|script|comment|li|meta|h1|h2|h3|h4|h5|h6|hr|ul|ol|option|link|br|pre)[^\>]*\>/gi;var need_nl_both = /\<[\/]?(style|head|body|html)[^\>]*\>/gi;	eval('var indent_char = '+active_rich.name+'_indent;');var indent_inc = new RegExp();	indent_inc.compile("^\<(head|table|tbody|thead|tr|ul|ol)[^\>]*\>", "i");var indent_dec = new RegExp();	indent_dec.compile("^\<\/(head|table|tbody|thead|tr|ul|ol)[^\>]*\>", "i");var nl = /\s*[\r|\n]+\s*/g;	code = code.replace(need_nl_before, "\n$&");	code = code.replace(need_nl_after, "$&\n");	code = code.replace(need_nl_both, "\n$&\n");	var code_lines = code.split(nl);	var new_code = "";	var indent = "";	var no_indent = false;	for (i=0; i<code_lines.length; i++) { if (code_lines[i] == "") continue; if (new_code != "") new_code += "\n"; if (indent_dec.exec(code_lines[i])) indent = indent.replace(indent_char, ""); var new_line = code_lines[i]; if (typeof(fix_entities) == "function" && !xhtml_mode) new_line = fix_entities(new_line); if (!no_indent) new_code += indent; new_code += new_line; var low_line = new_line.toLowerCase(); var k = low_line.lastIndexOf("<textarea"); var k2 = low_line.lastIndexOf("</textarea"); if (k > 0 && (k2 < 0 || k > k2)) no_indent = true; if (!no_indent && low_line.match(/\<pre/i)) no_indent = true; if (k2 > 0 && (k < 0 || k2 > k)) no_indent = false; if (no_indent && low_line.match(/\<\/pre/i)) no_indent = false; if (indent_inc.exec(code_lines[i]) && !no_indent) indent += indent_char;	}	return new_code;}function no_error(){	return true;}